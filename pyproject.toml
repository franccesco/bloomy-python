[project]
name = "bloomy-python"
version = "0.15.0"
description = "Python SDK for Bloom Growth API"
readme = "README.md"
authors = [{ name = "Franccesco Orozco", email = "franccesco@codingdose.info" }]
requires-python = ">=3.12"
dependencies = [
  "httpx>=0.27.0",
  "pyyaml>=6.0",
  "typing-extensions>=4.0.0",
  "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.0.0",
  "pytest-cov>=5.0.0",
  "pytest-asyncio>=0.23.0",
  "ruff>=0.5.0",
  "pyright>=1.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/bloomy"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
preview = true
select = [
  "E",     # pycodestyle — hard PEP 8 violations (indentation, spacing, etc.).
  "W",     # pycodestyle warnings — softer style nits you still want fixed.
  "F",     # pyflakes — real code errors: undefined names, unused vars & imports.
  "I",     # isort — keep your import blocks deterministically sorted/grouped.
  "B",     # bugbear — likely bugs and nasty edge-cases (mutable defaults, etc.).
  "C4",    # comprehensions — suggest faster/cleaner list- & dict-comps.
  "UP",    # pyupgrade — auto-rewrite code to the newest-supported Python syntax.
  "C901",  # mccabe — flag functions whose cyclomatic complexity balloons.
  "SIM",   # simplify — call out over-engineered constructs; prefer the obvious one-liner.
  "N",     # pep8-naming — enforce PEP 8 names for classes, funcs, vars, etc.
  "RUF",   # Ruff-native extras — Ruff-only correctness/perf rules (a la "unicorn").
  "FAST",  # fastapi — idiomatic FastAPI patterns and anti-pattern detection.
  "DOC",   # pydoclint — Google/Numpy docstring section order & completeness.
  "D",     # pydocstyle — PEP 257 docstring formatting conformance.
  "ARG",   # unused-arguments — catch never-used *args/**kwargs/params.
  "PERF",  # perflint — flag obvious performance foot-guns (e.g., `list()` in loops).
  "ASYNC",
]
ignore = ["D203", "D212", "D213"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "ARG002",
  "DOC501",
] # Ignore unused method arguments and exception docs in tests

[tool.ruff.lint.mccabe]
# Maximum complexity allowed (default is 10)
max-complexity = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyright]
include = ["src", "tests"]
pythonVersion = "3.12"
typeCheckingMode = "strict"
reportMissingImports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-ra --strict-markers --cov=bloomy --cov-report=term-missing"

[dependency-groups]
dev = [
  "mkdocs>=1.6.1",
  "mkdocs-material>=9.6.14",
  "mkdocstrings[python]>=0.29.1",
]
